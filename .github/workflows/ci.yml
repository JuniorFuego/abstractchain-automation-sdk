name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-format:
    name: Lint and Format
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check formatting
        run: npm run format:check

      - name: Lint
        run: npm run lint

      - name: TypeScript check
        run: npm run typecheck

  test-contracts:
    name: Test Smart Contracts
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install dependencies
        run: cd contracts && forge install

      - name: Build contracts
        run: cd contracts && forge build

      - name: Run contract tests
        run: cd contracts && forge test -vvv

      - name: Generate coverage report
        run: cd contracts && forge coverage --report lcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          files: ./contracts/lcov.info
          flags: contracts

  test-sdk:
    name: Test TypeScript SDK
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18, 20]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build packages
        run: npm run build

      - name: Run SDK tests
        run: npm run test:sdk

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: sdk

  test-bundler:
    name: Test Bundler Service
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build bundler
        run: npm run bundler:build

      - name: Test bundler
        run: cd bundler && npm test

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run npm audit
        run: npm audit --audit-level moderate

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install Slither
        run: pip3 install slither-analyzer

      - name: Run Slither
        run: cd contracts && slither src/ --exclude-dependencies

  build-and-test:
    name: Build and Integration Test
    runs-on: ubuntu-latest
    needs: [lint-and-format, test-contracts, test-sdk, test-bundler]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1
        with:
          version: nightly

      - name: Install dependencies
        run: npm ci

      - name: Install contract dependencies
        run: cd contracts && forge install

      - name: Build all packages
        run: npm run build

      - name: Run integration tests
        run: npm test

      - name: Build documentation
        run: npm run docs:build